MAKE ARRAY BYTE board = [0,0,0,0,0,0,0,0,0];
MAKE CHAR player = 'O';

MAKE FUNC VOID printBoard () {
    DO SAYLN ("--------------");

    DO {
        DO {
            DO SAY ((CHAR)(board#(i*3+j))) WHEN (board#(i*3+j) != 0) ELSE SAY (i*3+j+1);
            DO SAY (" ");
        } FOR (RANGE(3) => j);
        DO SAY ("\n");
    } FOR (RANGE(3) => i);

    DO SAYLN ("--------------");
};

MAKE FUNC BOOL checkWin (CHAR p) {
    // check for horizontal and vertical wins
    DO {
        DO RETURN (TRUE) WHEN (
            (board#i == p && board#(i+1) == p && board#(i+2) == p) ||
            (board#(i/3) == p && board#((i/3)+3) == p && board#((i/3)+6) == p)
        );
    } FOR (RANGE(3) => i);

    // check for diagonal wins
    DO RETURN (
        (board#0 == p && board#4 == p && board#8 == p) ||
        (board#2 == p && board#4 == p && board#6 == p)
    );
};
 
MAKE FUNC VOID playMove () {
    DO printBoard();

    DO SAYLN ("Player " + player + "'s turn");
    MAKE STRING input = LISTEN();
    DO END () WHEN (input == "quit" || input == "exit" || input == "q" || input == "e");

    DO SAYLN ("Please enter a number between 1 and 9") THEN playMove () THEN RETURN ()
    WHEN (input != 1);
    MAKE CHAR move = input#0;

    DO SAYLN ("Please enter a number between 1 and 9") THEN playMove () THEN RETURN ()
    WHEN (move < '1' || move > '9');

    DO SAYLN ("This spot has already been taken") THEN playMove () THEN RETURN ()
    WHEN (board#(move-'1'));

    SET board#(move-'1') = player;
    DO SAYLN ("Player " + player + " wins!") THEN RETURN () WHEN (checkWin(player));

    DO SAYLN ("Tie game!") THEN RETURN () WHEN (!ARRAYCONTAINS(board, 0));

    DO IF (player == 'O') THEN {
        SET player = 'X';
    } ELSE {
        SET player = 'O';
    };
    DO playMove (); // next player's turn
};

DO playMove (); // start game